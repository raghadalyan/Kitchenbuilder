@using Kitchenbuilder.Core
@using Kitchenbuilder.Core.Models
@inject SolidWorksSessionService SwSession
@using SolidWorks.Interop.sldworks
@code {
    [Parameter]
    public StationInfo Station { get; set; } = new();

    private void SelectCabinet(CabinetInfo cabinet)
    {
        int cabinetIndex = Station.Cabinets.IndexOf(cabinet) + 1;

        // 👇 Use body name: "Extrude_Drawers{WALL}_{INDEX}"
        string bodyName = $"Extrude_Drawers{Station.WallNumber}_{cabinetIndex}";

        IModelDoc2 model = SwSession.GetActiveModel();
        SelectBody.SelectByName(model, bodyName);
    }
    private int CountDrawers(Drawers drawers)
    {
        int count = 0;
        if (drawers.Width1 > 0) count++;
        if (drawers.Width2 > 0) count++;
        if (drawers.Width3 > 0) count++;
        if (drawers.Width4 > 0) count++;
        if (drawers.Width5 > 0) count++;
        return count;
    }
}

<div class="cabinet-icons-box">
    <p><strong>Cabinets for Wall @Station.WallNumber:</strong></p>
    <div class="cabinet-icons">
        @foreach (var cabinet in Station.Cabinets)
        {
            var hasDrawers = cabinet.HasDrawers && cabinet.Drawers is not null;
            var drawerCount = hasDrawers ? CountDrawers(cabinet.Drawers!) : 0;

                <div class="tooltip-wrapper">
                    <img src="/Images/cabinet.gif"
                         class="cabinet-icon"
                         alt="Cabinet"
                         @onclick="() => SelectCabinet(cabinet)" />

                    <div class="tooltip">
                        <div class="corner-icons">
                            <img src="/Images/edit.png" class="corner-icon" alt="Edit" />
                            <img src="/Images/delete.png" class="corner-icon" alt="Delete" />
                        </div>

                        Width: @cabinet.Width cm<br />
                        Height: @cabinet.Height cm<br />
                        Depth: @cabinet.Depth cm<br />
                        Has Drawers: @(hasDrawers ? "Yes" : "No")<br />
                    @if (hasDrawers)
                    {
                                <span>Drawer Count: @drawerCount</span>
                    }
                    </div>
                </div>
        }
    </div>
</div>
